" a10ependencies:
"   - vim-spf13
"   - See vimrc.bundles.local

" vim: set sw=2 ts=4 sts=2 et tw=78 foldmarker={,} foldlevel=0 foldmethod=marker nospell:
set shiftwidth=2                " Use indents of 4 spaces
set expandtab                   " Tabs are spaces, not tabs
set tabstop=2                   " An indentation every four columns
set softtabstop=2               " Let backspace delete indent

set nospell

colorscheme molokai

" JSX settings
let g:jsx_ext_required = 1

" Reveal file in tree
nmap ,n :NERDTreeFind<CR>

" Speed things up
set nocursorcolumn
set nocursorline

" disable auto matching parens
let g:loaded_matchparen=1
" don't render special chars (tabs, trails, ...)
set nolist
" if number column doesn't make sense to you, just don't render it
set nonumber
" lazy drawing
set lazyredraw
set ttyfast
" disable checking for preprocessers to make vue syntax highlighting quicker
let g:vue_disable_pre_processors=1
" disable pymode
let g:pymode=0
" disable tagbar
let g:airline#extensions#tagbar#enabled = 0

filetype on
" enable wrapping
set wrap

let g:syntastic_mode_map = {
    \ "mode": "passive",
    \ "active_filetypes": ["vue", "javascript", "html", "ruby", "java", "jsx", "typescript"],
    \ "passive_filetypes": [] }
let g:syntastic_typescript_checkers = ['tsuquyomi']

" Airline settings
set laststatus=2
let g:airline_powerline_fonts = 1
let g:airline_theme='dark'
let g:airline_right_alt_sep = ''
let g:airline_right_sep = ''
let g:airline_left_alt_sep= ''
let g:airline_left_sep = ''

" Typescript options
" See https://github.com/Quramy/tsuquyomi/blob/master/doc/tsuquyomi.txt#L245
let g:tsuquyomi_definition_split = 2 
let g:tsuquyomi_single_quote_import = 1
let g:tsuquyomi_completion_detail = 1
let g:tsuquyomi_disable_quickfix = 1
let g:tsuquyomi_ignore_missing_modules = 1
autocmd FileType typescript setlocal omnifunc=tsuquyomi#complete
autocmd FileType typescript nmap <buffer> <Leader>t :
    \ <C-u>echo tsuquyomi#hint()<CR>
"autocmd FileType typescript setlocal completeopt+=preview

" Automatically fitting a quickfix window height, consider a long line as many lines.
" based in http://vim.wikia.com/wiki/Automatically_fitting_a_quickfix_window_height
au FileType qf call AdjustWindowHeight(3, 20)
function! AdjustWindowHeight(minheight, maxheight)
  let l = 1
  let n_lines = 0
  let w_width = winwidth(0)
  while l <= line('$')
    " number to float for division
    let l_len = strlen(getline(l)) + 0.0
    let line_width = l_len/w_width
    let n_lines += float2nr(ceil(line_width))
    let l += 1
  endw
  exe max([min([n_lines, a:maxheight]), a:minheight]) . "wincmd _"
endfunction

" Disable lint checking on Haskell, or *.hs files
autocmd! BufWritePost *.hs

" Scroll Wheel = Up/Down 1 line
noremap <ScrollWheelUp> <C-Y>
noremap <ScrollWheelDown> <C-E>
