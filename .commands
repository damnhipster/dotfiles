function cert() {
  echo | openssl s_client -showcerts -servername $1 -connect $1:443 2>/dev/null | openssl x509 -inform pem -noout -text
}

function vpn() {
  vpn_name="streisand"
  command=$1
  region=${2:-eu-west-2}
  regions=`aws ec2 describe-regions --profile hemtech | jq '.Regions[].RegionName' --raw-output`

  if ! echo $regions | grep $region > /dev/null; then
    echo "Invalid region. Use one of the following."
    echo $regions
    return 1
  fi

  id=`aws ec2 describe-instances --filters Name=tag:Name,Values=$vpn_name --region $region --profile hemtech | jq --raw-output '.Reservations[].Instances[].InstanceId'`

  if [ $command = "start" ]; then
    aws ec2 ${command}-instances \
    --instance-ids $id \
    --profile hemtech \
    --region $region \
    > /dev/null

    aws ec2 wait instance-running \
    --instance-ids $id \
    --profile hemtech \
    --region $region

    # l2tp over IPSec
    # networksetup -connectpppoeservice $vpn_name

    # OpenVPN
    osascript -e "tell application \"/Applications/Tunnelblick.app\"" -e "connect \"$region\"" -e "end tell" > /dev/null

    echo "VPN started"

  else

    # l2tp over IPSec
    # scutil --nc stop $vpn_name

    # OpenVPN
    osascript -e "tell application \"/Applications/Tunnelblick.app\"" -e "disconnect \"$region\"" -e "end tell" > /dev/null

    aws ec2 ${command}-instances \
    --instance-ids $id \
    --profile hemtech \
    --region $region \
    > /dev/null

    aws ec2 wait instance-stopped \
    --instance-ids $id \
    --profile hemtech \
    --region $region

    echo "VPN stopped"
  fi

}

function yaml2json() {
  ruby -ryaml -rjson -e \
    '$/ = "END"; input = STDIN.gets; puts YAML.load(input).to_json if YAML.parse(input)'
}

#!/bin/bash
#Info: https://community.akamai.com/community/web-performance/blog/2015/03/31/using-akamai-pragma-headers-to-investigate-or-troubleshoot-akamai-content-delivery
function akamai() {
  curl -sILk -H 'Pragma: akamai-x-cache-on, akamai-x-cache-remote-on,akamai-x-check-cacheable, akamai-x-get-cache-key,akamai-x-get-extracted-values, akamai-x-get-nonces,akamai-x-get-ssl-client-session-id,akamai-x-get-true-cache-key, akamai-x-serial-no' $* 2>&1
}

function backup() { 
  mv ~/$1 ~/Projects/dotfiles/ && ln -s ~/Projects/dotfiles/$1;   
}

function password() {
  chars='@#$%&_+='
  { </dev/urandom LC_ALL=C grep -ao '[A-Za-z0-9]' \
          | head -n$((RANDOM % 8 + 9))
      echo ${chars:$((RANDOM % ${#chars})):1}   # Random special char.
  } \
      | sort -r \
      | tr -d '\n' \
      | pbcopy \
      && echo `pbpaste`
}
